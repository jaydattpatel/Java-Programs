/*
 author: Jaydatt Patel
 Exception handing: 
    try{
            //statements that may cause an exception
        }
    catch (){
            // error handling code
        }
    ..catch (){
            // error handling code
        }
    // optional
    finally {  
        // this block of code to be always executed after try block ends even exception generated or not 
    }

            
 */
public class Exception_try_catch_1 {
 
    public static void main(String args[]) 
    { 
        try { 
         
            int a = 2; //set value of a first 0 an run then 1 and after that 2

            //If when a = 0, the  following statement will generate a divide-by-zero exception. 
            int b = 42 / a; 

            System.out.println("a = " + a); 
            try { 
                    // If a = 1, then  a divide-by-zero exception will be  generated by the following code. 
                    if (a == 1) 
                        a = a / (a - a); // division by zero 
                    
                
                    // If a = 2 are used, then generate an  out-of-bounds exception.   
                    if (a == 2) 
                        { 
                            int c[] = { 1 }; 
                            c[42] = 99;  // generate an out-of-bounds exception          
                        } 

            } catch (ArrayIndexOutOfBoundsException err) { 
                    System.out.println("Array Index Out of Bound: " + err); 
                } 
        } catch (ArithmeticException err) { 

            System.out.println("Divide by 0: " + err); 

        } 
    } 
} 
